name: Production Deployment

on:
  push:
    branches: [ main ]
  release:
    types: [published]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Run security scan
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        
    - name: Run SAST
      uses: github/codeql-action/analyze@v2
      
  test:
    needs: security-scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run tests
      run: |
        pytest tests/ --cov=src/
        
    - name: Build documentation
      run: |
        cd docs
        make html
        
  deploy-production:
    needs: [security-scan, test]
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://startrektech.ai
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    
    - name: Deploy to production
      run: |
        aws eks update-kubeconfig --name production-cluster
        helm upgrade --install startrektech ./helm/startrektech -f ./helm/values-production.yaml
        
    - name: Deploy documentation
      run: |
        aws s3 sync docs/_build/html s3://docs.startrektech.ai/
        
    - name: Run smoke tests
      run: |
        pytest tests/smoke/
        
    - name: Monitor deployment
      run: |
        kubectl rollout status deployment/startrektech
        
    - name: Create backup
      run: |
        ./scripts/backup.sh production
        
  notify:
    needs: deploy-production
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Notify team
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
